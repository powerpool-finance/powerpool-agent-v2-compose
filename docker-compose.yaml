version: "3.9"

services:
  agent-latest:
    image: powerpool/power-agent-node:latest
    restart: always
    networks:
      - default
    volumes:
      - ./config:/usr/app/config
      - ./keys:/usr/app/keys
    ports:
      - "${NODE_API_PORT:-8099}:${NODE_API_PORT:-8099}"
    environment:
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${NODE_API_PORT:-8099}
      OFFCHAIN_SERVICE_ENDPOINT: http://offchain-service:${OFFCHAIN_API_PORT:-3423}
    profiles: [latest]

  agent-dev:
    image: powerpool/power-agent-node:dev
    restart: always
    networks:
      - default
    volumes:
      - ./config:/usr/app/config
      - ./keys:/usr/app/keys
    ports:
      - "${NODE_API_PORT:-8099}:${NODE_API_PORT:-8099}"
    environment:
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${NODE_API_PORT:-8099}
      OFFCHAIN_SERVICE_ENDPOINT: http://offchain-service:${OFFCHAIN_API_PORT:-3423}
    profiles: [dev]

  offchain-service:
    image: powerpool/power-agent-offchain-service:latest
    restart: always
    networks:
      - default
      - ipfs_net
    depends_on:
      - ipfs
      - temp-executor
    volumes:
      - ./scriptsFetched:/scriptsFetched
      - ./scriptToExecute:/scriptToExecute
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${OFFCHAIN_API_PORT:-3423}:${OFFCHAIN_API_PORT:-3423}"
    environment:
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${OFFCHAIN_API_PORT:-3423}
      AGENT_API_PORT: ${NODE_API_PORT:-8099}
      COMPOSE_MODE: 1
      MAX_EXECUTION_TIME: ${OFFCHAIN_MAX_EXECUTION_TIME}
    profiles: [latest, dev]

  ipfs:
    image: ipfs/kubo:v0.29.0
    networks:
      ipfs_peers:
      ipfs_net:
        aliases:
          - ipfs-service
    restart: always
    environment:
      - IPFS_PROFILE=server
    entrypoint: ["/bin/sh", "-c", "ipfs init; ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001; ipfs daemon & echo 'ipfs daemon started.'; sleep 86400; echo 'clear & restart ipfs...'; rm -rf /data/ipfs/*; reboot"]
    ports:
      - "4001:4001"
      - "5001:5001"
    volumes:
      - "${IPFS_EXPORT:-./ipfs-export}:/export"
      - "${IPFS_DATA:-./ipfs-data}:/data/ipfs"
    profiles: [latest, dev]

  temp-executor:
    image: node:18-alpine

networks:
  ipfs_peers:
  ipfs_net:
    internal: true
  default:
    driver: bridge